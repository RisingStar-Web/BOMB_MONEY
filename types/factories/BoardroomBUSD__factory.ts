/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BoardroomBUSD, BoardroomBUSDInterface } from "../BoardroomBUSD";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "at",
        type: "uint256",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "allocateSeigniorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "boardroomHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardReceived",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "canClaimReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "getLastSnapshotIndexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "governanceRecoverUnsupported",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_share",
        type: "address",
      },
      {
        internalType: "contract ITreasury",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestSnapshotIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "uint256",
        name: "lastSnapshotIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardEarned",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "epochTimerStart",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveFund",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardLockupEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawLockupEpochs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardLockupEpochs",
        type: "uint256",
      },
    ],
    name: "setLockUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserveFund",
        type: "address",
      },
    ],
    name: "setReserveFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakeFee",
        type: "uint256",
      },
    ],
    name: "setStakeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawFee",
        type: "uint256",
      },
    ],
    name: "setWithdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawFeeMultiplier",
        type: "uint256",
      },
    ],
    name: "setWithdrawFeeMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "share",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFeeMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLockupEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526004805460ff60a01b1916905534801561001d57600080fd5b506122598061002d6000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c806361d027b311610130578063b7f92b71116100b8578063e2d7bee41161007c578063e2d7bee4146104b7578063e941fa78146104ca578063e9fad8ee146104d3578063f498d8a6146104db578063fc0c546a146104ee57600080fd5b8063b7f92b711461046e578063b88a802f14610481578063c0c53b8b14610489578063c58e38431461049c578063c5967c26146104af57600080fd5b806397ffe1d7116100ff57806397ffe1d71461040f578063a694fc3a14610422578063a8d5fd6514610435578063b3ab15fb14610448578063b6ac642a1461045b57600080fd5b806361d027b3146103a257806370a08231146103b5578063714b4658146103de578063900cf0cf1461040757600080fd5b80631e85cd65116101b35780633f9e3f04116101825780633f9e3f041461034c578063446a2ec8146103545780634b94f50e1461035c57806354575af414610364578063570ca7351461037757600080fd5b80631e85cd6514610314578063222c97771461031d5780632e1a7d4d146103265780632ffaaa091461033957600080fd5b80630882a79b116101fa5780630882a79b1461029257806308ae4b0c1461029b578063158ef93e146102e557806318160ddd146102f957806319262d301461030157600080fd5b80628cc2621461022b578063022ba18d14610251578063046335d01461025a57806307178c221461027d575b600080fd5b61023e610239366004611f6c565b610501565b6040519081526020015b60405180910390f35b61023e600a5481565b61026d610268366004611f6c565b610592565b6040519015158152602001610248565b61029061028b366004611f89565b610630565b005b61023e600e5481565b6102ca6102a9366004611f6c565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610248565b60045461026d90600160a01b900460ff1681565b60025461023e565b61026d61030f366004611f6c565b6106d9565b61023e60095481565b61023e600d5481565b610290610334366004611f89565b61076f565b610290610347366004611fa2565b610cbd565b61023e610d5b565b61023e610d71565b61023e610d84565b610290610372366004611fc4565b610df2565b60045461038a906001600160a01b031681565b6040516001600160a01b039091168152602001610248565b60065461038a906001600160a01b031681565b61023e6103c3366004611f6c565b6001600160a01b031660009081526003602052604090205490565b61023e6103ec366004611f6c565b6001600160a01b031660009081526007602052604090205490565b61023e610ec1565b61029061041d366004611f89565b610f0b565b610290610430366004611f89565b6111d7565b60015461038a906001600160a01b031681565b610290610456366004611f6c565b6114ca565b610290610469366004611f89565b611516565b600b5461038a906001600160a01b031681565b610290611596565b610290610497366004612006565b611818565b6102ca6104aa366004611f89565b6119c9565b61023e6119fc565b6102906104c5366004611f89565b611a46565b61023e600c5481565b610290611abc565b6102906104e9366004611f6c565b611ad7565b60055461038a906001600160a01b031681565b60008061050c611b89565b604001519050600061051d84611c03565b6040908101516001600160a01b03861660009081526007602052919091206001015490915061058a90610584670de0b6b3a764000061057e61055f8787611c96565b6001600160a01b038a1660009081526003602052604090205490611ca9565b90611cb5565b90611cc1565b949350505050565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa1580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190612046565b600a546001600160a01b03841660009081526007602052604090206002015461062891611cc1565b111592915050565b6004546001600160a01b031633146106635760405162461bcd60e51b815260040161065a9061205f565b60405180910390fd5b6064811015801561067657506103e88111155b6106d45760405162461bcd60e51b815260206004820152602960248201527f776974686472617720666565206d756c7469706c696572206d75737420626520604482015268062f040e8de406260f60bb1b606482015260840161065a565b600e55565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190612046565b6009546001600160a01b03841660009081526007602052604090206002015461062891611cc1565b4360009081526020818152604080832032845290915290205460ff16156107a85760405162461bcd60e51b815260040161065a906120a4565b4360009081526020818152604080832033845290915290205460ff16156107e15760405162461bcd60e51b815260040161065a906120a4565b336000908152600360205260408120541161084a5760405162461bcd60e51b8152602060048201526024808201527f426f617264726f6f6d3a20546865206d656d62657220646f6573206e6f7420656044820152631e1a5cdd60e21b606482015260840161065a565b3380156108db576001600160a01b038116600090815260076020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915261089982610501565b60208201526108a6610d5b565b81526001600160a01b038216600090815260076020908152604091829020835181559083015160018201559101516002909101555b6000821161092b5760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f74207769746864726177203000000000604482015260640161065a565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190612046565b600954336000908152600760205260409020600201546109c191611cc1565b1115610a1b5760405162461bcd60e51b815260206004820152602360248201527f426f617264726f6f6d3a207374696c6c20696e207769746864726177206c6f6360448201526206b75760ec1b606482015260840161065a565b610a23611596565b3360009081526003602052604090205482811015610aa25760405162461bcd60e51b815260206004820152603660248201527f426f617264726f6f6d3a207769746864726177207265717565737420677265616044820152751d195c881d1a185b881cdd185ad95908185b5bdd5b9d60521b606482015260840161065a565b600254610aaf9084611c96565b600255610abc8184611c96565b33600090815260036020526040902055600c5415610c3357600654604080516325ca7a8760e11b815290516000926001600160a01b031691634b94f50e9160048083019260209291908290030181865afa158015610b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b429190612046565b90506000600660009054906101000a90046001600160a01b03166001600160a01b031663f77c9fd86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd9190612046565b905080821015610be757610be3606461057e600e54600c54611ca990919063ffffffff16565b600c555b6000610c03606461057e600c5489611ca990919063ffffffff16565b600b54600154919250610c23916001600160a01b03908116911683611ccd565b610c2d8682611c96565b95505050505b600154610c4a906001600160a01b03163385611ccd565b60405183815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a25050436000908152602081815260408083203284529091528082208054600160ff199182168117909255338452919092208054909116909117905550565b6004546001600160a01b03163314610ce75760405162461bcd60e51b815260040161065a9061205f565b808210158015610cf85750602a8211155b610d505760405162461bcd60e51b815260206004820152602360248201527f5f77697468647261774c6f636b757045706f6368733a206f7574206f662072616044820152626e676560e81b606482015260840161065a565b600991909155600a55565b600854600090610d6c906001611c96565b905090565b6000610d7b611b89565b60400151905090565b600654604080516325ca7a8760e11b815290516000926001600160a01b031691634b94f50e9160048083019260209291908290030181865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c9190612046565b6004546001600160a01b03163314610e1c5760405162461bcd60e51b815260040161065a9061205f565b6005546001600160a01b0390811690841603610e625760405162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b604482015260640161065a565b6001546001600160a01b0390811690841603610ea85760405162461bcd60e51b8152602060048201526005602482015264736861726560d81b604482015260640161065a565b610ebc6001600160a01b0384168284611ccd565b505050565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa158015610dce573d6000803e3d6000fd5b4360009081526020818152604080832032845290915290205460ff1615610f445760405162461bcd60e51b815260040161065a906120a4565b4360009081526020818152604080832033845290915290205460ff1615610f7d5760405162461bcd60e51b815260040161065a906120a4565b6004546001600160a01b03163314610fa75760405162461bcd60e51b815260040161065a9061205f565b60008111610ff75760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465203000000000604482015260640161065a565b600061100260025490565b116110685760405162461bcd60e51b815260206004820152603060248201527f426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465207768656e2060448201526f0746f74616c537570706c7920697320360841b606482015260840161065a565b6000611072611b89565b60400151905060006110a261109b61108960025490565b61057e86670de0b6b3a7640000611ca9565b8390611cc1565b60408051606081018252438152602081018681529181018381526008805460018101825560009190915282517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee360039092029182015592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee59092019190915560055491925090611163906001600160a01b0316333087611d30565b60405184815233907fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e299060200160405180910390a25050436000908152602081815260408083203284529091528082208054600160ff19918216811790925533845291909220805490911690911790555050565b4360009081526020818152604080832032845290915290205460ff16156112105760405162461bcd60e51b815260040161065a906120a4565b4360009081526020818152604080832033845290915290205460ff16156112495760405162461bcd60e51b815260040161065a906120a4565b3380156112da576001600160a01b038116600090815260076020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915261129882610501565b60208201526112a5610d5b565b81526001600160a01b038216600090815260076020908152604091829020835181559083015160018201559101516002909101555b6000821161132a5760405162461bcd60e51b815260206004820152601960248201527f426f617264726f6f6d3a2043616e6e6f74207374616b65203000000000000000604482015260640161065a565b600154611342906001600160a01b0316333085611d30565b600d5415611394576000611366606461057e600d5486611ca990919063ffffffff16565b600b54600154919250611386916001600160a01b03908116911683611ccd565b6113908382611c96565b9250505b6002546113a19083611cc1565b600255336000908152600360205260409020546113be9083611cc1565b3360009081526003602090815260409182902092909255600654815163900cf0cf60e01b815291516001600160a01b039091169263900cf0cf92600480820193918290030181865afa158015611418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143c9190612046565b33600081815260076020526040908190206002019290925590517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906114859085815260200190565b60405180910390a25050436000908152602081815260408083203284529091528082208054600160ff1991821681179092553384529190922080549091169091179055565b6004546001600160a01b031633146114f45760405162461bcd60e51b815260040161065a9061205f565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031633146115405760405162461bcd60e51b815260040161065a9061205f565b60148111156115915760405162461bcd60e51b815260206004820152601760248201527f4d61782077697468647261772066656520697320323025000000000000000000604482015260640161065a565b600c55565b338015611627576001600160a01b03811660009081526007602090815260409182902082516060810184528154815260018201549281019290925260020154918101919091526115e582610501565b60208201526115f2610d5b565b81526001600160a01b038216600090815260076020908152604091829020835181559083015160018201559101516002909101555b33600090815260076020526040902060010154801561181457600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b79190612046565b600a54336000908152600760205260409020600201546116d691611cc1565b111561172e5760405162461bcd60e51b815260206004820152602160248201527f426f617264726f6f6d3a207374696c6c20696e20726577617264206c6f636b756044820152600760fc1b606482015260840161065a565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a59190612046565b33600081815260076020526040812060028101939093556001909201919091556005546117de916001600160a01b039091169083611ccd565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b5050565b600454600160a01b900460ff16156118725760405162461bcd60e51b815260206004820152601e60248201527f426f617264726f6f6d3a20616c726561647920696e697469616c697a65640000604482015260640161065a565b600580546001600160a01b038086166001600160a01b0319928316179092556001805485841690831617815560068054938516939092169290921790556002600d819055600c8190556064600e55604080516060810182524380825260006020830181815283850182815260088054808a0182559352845160039093027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019390935590517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4830155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee590910155600993909355600a93909355600480546001600160a81b03191633908117600160a01b17909155905190917f25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79916119bb91815260200190565b60405180910390a250505050565b600881815481106119d957600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600654604080516362cb3e1360e11b815290516000926001600160a01b03169163c5967c269160048083019260209291908290030181865afa158015610dce573d6000803e3d6000fd5b6004546001600160a01b03163314611a705760405162461bcd60e51b815260040161065a9061205f565b6005811115611ab75760405162461bcd60e51b81526020600482015260136024820152724d6178207374616b652066656520697320352560681b604482015260640161065a565b600d55565b33600090815260036020526040902054611ad59061076f565b565b6004546001600160a01b03163314611b015760405162461bcd60e51b815260040161065a9061205f565b6001600160a01b038116611b675760405162461bcd60e51b815260206004820152602760248201527f7265736572766546756e6420616464726573732063616e6e6f742062652030206044820152666164647265737360c81b606482015260840161065a565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b611bad60405180606001604052806000815260200160008152602001600081525090565b6008611bb7610d5b565b81548110611bc757611bc76120ea565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b611c2760405180606001604052806000815260200160008152602001600081525090565b6008611c48836001600160a01b031660009081526007602052604090205490565b81548110611c5857611c586120ea565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050919050565b6000611ca28284612116565b9392505050565b6000611ca2828461212d565b6000611ca2828461214c565b6000611ca2828461216e565b6040516001600160a01b038316602482015260448101829052610ebc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d6e565b6040516001600160a01b0380851660248301528316604482015260648101829052611d689085906323b872dd60e01b90608401611cf9565b50505050565b6000611dc3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e409092919063ffffffff16565b805190915015610ebc5780806020019051810190611de19190612186565b610ebc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161065a565b606061058a8484600085856001600160a01b0385163b611ea25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161065a565b600080866001600160a01b03168587604051611ebe91906121d4565b60006040518083038185875af1925050503d8060008114611efb576040519150601f19603f3d011682016040523d82523d6000602084013e611f00565b606091505b5091509150611f10828286611f1b565b979650505050505050565b60608315611f2a575081611ca2565b825115611f3a5782518084602001fd5b8160405162461bcd60e51b815260040161065a91906121f0565b6001600160a01b0381168114611f6957600080fd5b50565b600060208284031215611f7e57600080fd5b8135611ca281611f54565b600060208284031215611f9b57600080fd5b5035919050565b60008060408385031215611fb557600080fd5b50508035926020909101359150565b600080600060608486031215611fd957600080fd5b8335611fe481611f54565b9250602084013591506040840135611ffb81611f54565b809150509250925092565b60008060006060848603121561201b57600080fd5b833561202681611f54565b9250602084013561203681611f54565b91506040840135611ffb81611f54565b60006020828403121561205857600080fd5b5051919050565b60208082526025908201527f426f617264726f6f6d3a2063616c6c6572206973206e6f7420746865206f70656040820152643930ba37b960d91b606082015260800190565b60208082526026908201527f436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e652066756040820152653731ba34b7b760d11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561212857612128612100565b500390565b600081600019048311821515161561214757612147612100565b500290565b60008261216957634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561218157612181612100565b500190565b60006020828403121561219857600080fd5b81518015158114611ca257600080fd5b60005b838110156121c35781810151838201526020016121ab565b83811115611d685750506000910152565b600082516121e68184602087016121a8565b9190910192915050565b602081526000825180602084015261220f8160408501602087016121a8565b601f01601f1916919091016040019291505056fea264697066735822122030820c10d0a27bc8d9cf922c4270a607a6ad40b2e80cc28b6248a90caf81f90d64736f6c634300080d0033";

type BoardroomBUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoardroomBUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoardroomBUSD__factory extends ContractFactory {
  constructor(...args: BoardroomBUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BoardroomBUSD> {
    return super.deploy(overrides || {}) as Promise<BoardroomBUSD>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BoardroomBUSD {
    return super.attach(address) as BoardroomBUSD;
  }
  connect(signer: Signer): BoardroomBUSD__factory {
    return super.connect(signer) as BoardroomBUSD__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoardroomBUSDInterface {
    return new utils.Interface(_abi) as BoardroomBUSDInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoardroomBUSD {
    return new Contract(address, _abi, signerOrProvider) as BoardroomBUSD;
  }
}
