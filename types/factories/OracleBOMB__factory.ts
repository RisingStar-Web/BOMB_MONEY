/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleBOMB, OracleBOMBInterface } from "../OracleBOMB";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "OperatorTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price0CumulativeLast",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price1CumulativeLast",
        type: "uint256",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    inputs: [],
    name: "blockTimestampLast",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "uint144",
        name: "amountOut",
        type: "uint144",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastEpochTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0Average",
    outputs: [
      {
        internalType: "uint224",
        name: "_x",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1Average",
    outputs: [
      {
        internalType: "uint224",
        name: "_x",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "setEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "setPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator_",
        type: "address",
      },
    ],
    name: "transferOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "twap",
    outputs: [
      {
        internalType: "uint144",
        name: "_amountOut",
        type: "uint144",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200169c3803806200169c83398101604081905262000034916200044b565b818160006200004333620003cd565b600180546001600160a01b031916339081179091556040516000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a3600283905560038290556005819055620000aa82846200041d602090811b620009f617901c565b6004908155600880546001600160a01b0319166001600160a01b03891690811790915560408051630dfe168160e01b81529051919550630dfe168194508083019350602092908290030181865afa1580156200010a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000130919062000485565b600680546001600160a01b0319166001600160a01b039283161790556008546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa1580156200018f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b5919062000485565b600780546001600160a01b0319166001600160a01b0392831617905560085460408051635909c0d560e01b815290519190921691635909c0d59160048083019260209291908290030181865afa15801562000214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023a9190620004a5565b60095560085460408051635a3d549360e01b815290516001600160a01b0390921691635a3d5493916004808201926020929091908290030181865afa15801562000288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ae9190620004a5565b600a5560085460408051630240bc6b60e21b8152905160009283926001600160a01b0390911691630902f1ac916004808201926060929091908290030181865afa15801562000301573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003279190620004dc565b6008805463ffffffff909216600160a01b0263ffffffff60a01b1990921691909117905590925090506001600160701b038216158015906200037157506001600160701b03811615155b620003c25760405162461bcd60e51b815260206004820152601360248201527f4f7261636c653a204e4f5f524553455256455300000000000000000000000000604482015260640160405180910390fd5b505050505062000558565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200042b828462000532565b9392505050565b6001600160a01b03811681146200044857600080fd5b50565b6000806000606084860312156200046157600080fd5b83516200046e8162000432565b602085015160409095015190969495509392505050565b6000602082840312156200049857600080fd5b81516200042b8162000432565b600060208284031215620004b857600080fd5b5051919050565b80516001600160701b0381168114620004d757600080fd5b919050565b600080600060608486031215620004f257600080fd5b620004fd84620004bf565b92506200050d60208501620004bf565b9150604084015163ffffffff811681146200052757600080fd5b809150509250925092565b6000828210156200055357634e487b7160e01b600052601160045260246000fd5b500390565b61113480620005686000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063ba5224581161007c578063ba522458146102de578063c5700a02146102e6578063c5967c2614610312578063c828371e1461031a578063d21220a714610322578063f2fde38b1461033557600080fd5b8063715018a61461028f5780638da5cb5b14610297578063a2e62045146102a8578063a6bb4539146102b0578063a8aa1b31146102c3578063b97dd9e2146102d657600080fd5b80634456eda2116101155780634456eda214610210578063570ca7351461022e5780635909c0d51461023f5780635a3d5493146102485780635e6aaf2c146102515780636808a1281461027c57600080fd5b80630ceb2cef1461015d5780630dfe1681146101725780630f3a9f65146101a25780631ed24195146101b557806329605e77146101c75780633ddac953146101da575b600080fd5b61017061016b366004610eba565b610348565b005b600654610185906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101706101b0366004610eba565b610380565b6002545b604051908152602001610199565b6101706101d5366004610eef565b610408565b6101ed6101e8366004610f0a565b61041c565b60405171ffffffffffffffffffffffffffffffffffff9091168152602001610199565b6001546001600160a01b031633146040519015158152602001610199565b6001546001600160a01b0316610185565b6101b960095481565b6101b9600a5481565b600c54610264906001600160e01b031681565b6040516001600160e01b039091168152602001610199565b6101ed61028a366004610f0a565b6104ef565b6101706105de565b6000546001600160a01b0316610185565b6101706105f2565b600b54610264906001600160e01b031681565b600854610185906001600160a01b031681565b6005546101b9565b6004546101b9565b6008546102fd90600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610199565b6101b9610962565b6003546101b9565b600754610185906001600160a01b031681565b610170610343366004610eef565b610980565b6001546001600160a01b0316331461037b5760405162461bcd60e51b815260040161037290610f34565b60405180910390fd5b600555565b6001546001600160a01b031633146103aa5760405162461bcd60e51b815260040161037290610f34565b610e1081101580156103bf57506202a3008111155b6104035760405162461bcd60e51b81526020600482015260156024820152745f706572696f643a206f7574206f662072616e676560581b6044820152606401610372565b600255565b610410610a02565b61041981610a5c565b50565b6006546000906001600160a01b039081169084160361046a576040805160208101909152600b546001600160e01b031681526104639061045c9084610b20565b5160701c90565b90506104e9565b6007546001600160a01b038481169116146104bf5760405162461bcd60e51b815260206004820152601560248201527427b930b1b6329d1024a72b20a624a22faa27a5a2a760591b6044820152606401610372565b6040805160208101909152600c546001600160e01b031681526104e69061045c9084610b20565b90505b92915050565b60085460009081908190819061050d906001600160a01b0316610bca565b600854929550909350915060009061053290600160a01b900463ffffffff1683610f8e565b6006549091506001600160a01b03908116908816036105945761058d61045c8760405180602001604052808563ffffffff166009548a6105729190610fb3565b61057c9190610fe0565b6001600160e01b0316905290610b20565b94506105d4565b6007546001600160a01b03908116908816036105d4576105d161045c8760405180602001604052808563ffffffff16600a54896105729190610fb3565b94505b5050505092915050565b6105e6610a02565b6105f06000610d9d565b565b60006105fc610962565b9050804210156107d3576001546001600160a01b031633146106735760405162461bcd60e51b815260206004820152602a60248201527f45706f63683a206f6e6c79206f70657261746f7220616c6c6f77656420666f72604482015269040e0e4ca5acae0dec6d60b31b6064820152608401610372565b6008546000908190819061068f906001600160a01b0316610bca565b60085492955090935091506000906106b490600160a01b900463ffffffff1683610f8e565b90508063ffffffff166000036106cb575050505050565b60405180602001604052808263ffffffff16600954876106eb9190610fb3565b6106f59190610fe0565b6001600160e01b039081169091529051600b80546001600160e01b031916919092161790556040805160208101909152600a54819063ffffffff84169061073c9087610fb3565b6107469190610fe0565b6001600160e01b039081169091529051600c80546001600160e01b031916919092161790556009849055600a8390556008805463ffffffff60a01b1916600160a01b63ffffffff85160217905560408051858152602081018590527fd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902910160405180910390a15050505050565b600854600090819081906107ef906001600160a01b0316610bca565b600854929550909350915060009061081490600160a01b900463ffffffff1683610f8e565b90508063ffffffff1660000361082d5750505050610933565b60405180602001604052808263ffffffff166009548761084d9190610fb3565b6108579190610fe0565b6001600160e01b039081169091529051600b80546001600160e01b031916919092161790556040805160208101909152600a54819063ffffffff84169061089e9087610fb3565b6108a89190610fe0565b6001600160e01b039081169091529051600c80546001600160e01b031916919092161790556009849055600a8390556008805463ffffffff60a01b1916600160a01b63ffffffff85160217905560408051858152602081018590527fd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902910160405180910390a1505050505b60048190556005805460009061094890610ff4565b90915550610954610962565b905080421061041957610933565b600061097b600254600454610ded90919063ffffffff16565b905090565b610988610a02565b6001600160a01b0381166109ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610372565b61041981610d9d565b60006104e68284610fb3565b6000546001600160a01b031633146105f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610372565b6001600160a01b038116610ac85760405162461bcd60e51b815260206004820152602d60248201527f6f70657261746f723a207a65726f206164647265737320676976656e20666f7260448201526c103732bb9037b832b930ba37b960991b6064820152608401610372565b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160208101909152600081526000821580610b5d575083516001600160e01b031683610b4f818361100d565b9250610b5b9083610fe0565b145b610bb55760405162461bcd60e51b815260206004820152602360248201527f4669786564506f696e743a204d554c5449504c49434154494f4e5f4f564552466044820152624c4f5760e81b6064820152608401610372565b60408051602081019091529081529392505050565b6000806000610bd7610df9565b9050836001600160a01b0316635909c0d56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3b919061102c565b9250836001600160a01b0316635a3d54936040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9f919061102c565b91506000806000866001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d08919061105c565b9250925092508363ffffffff168163ffffffff1614610d93576000610d2d8286610f8e565b90508063ffffffff16610d408486610e0a565b51610d5491906001600160e01b031661100d565b610d5e90886110ac565b96508063ffffffff16610d718585610e0a565b51610d8591906001600160e01b031661100d565b610d8f90876110ac565b9550505b5050509193909250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006104e682846110ac565b600061097b640100000000426110c4565b6040805160208101909152600081526000826001600160701b031611610e725760405162461bcd60e51b815260206004820152601760248201527f4669786564506f696e743a204449565f42595f5a45524f0000000000000000006044820152606401610372565b604080516020810190915280610ea86001600160701b0385166dffffffffffffffffffffffffffff60701b607088901b166110d8565b6001600160e01b031690529392505050565b600060208284031215610ecc57600080fd5b5035919050565b80356001600160a01b0381168114610eea57600080fd5b919050565b600060208284031215610f0157600080fd5b6104e682610ed3565b60008060408385031215610f1d57600080fd5b610f2683610ed3565b946020939093013593505050565b60208082526024908201527f6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657260408201526330ba37b960e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff83811690831681811015610fab57610fab610f78565b039392505050565b600082821015610fc557610fc5610f78565b500390565b634e487b7160e01b600052601260045260246000fd5b600082610fef57610fef610fca565b500490565b60006001820161100657611006610f78565b5060010190565b600081600019048311821515161561102757611027610f78565b500290565b60006020828403121561103e57600080fd5b5051919050565b80516001600160701b0381168114610eea57600080fd5b60008060006060848603121561107157600080fd5b61107a84611045565b925061108860208501611045565b9150604084015163ffffffff811681146110a157600080fd5b809150509250925092565b600082198211156110bf576110bf610f78565b500190565b6000826110d3576110d3610fca565b500690565b60006001600160e01b03838116806110f2576110f2610fca565b9216919091049291505056fea2646970667358221220d9ae86829f1fe2c888b5b74c403eb1afd39f3013812227c176957f6701f8e53f64736f6c634300080d0033";

type OracleBOMBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleBOMBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleBOMB__factory extends ContractFactory {
  constructor(...args: OracleBOMBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _pair: string,
    _period: BigNumberish,
    _startTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleBOMB> {
    return super.deploy(
      _pair,
      _period,
      _startTime,
      overrides || {}
    ) as Promise<OracleBOMB>;
  }
  getDeployTransaction(
    _pair: string,
    _period: BigNumberish,
    _startTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pair,
      _period,
      _startTime,
      overrides || {}
    );
  }
  attach(address: string): OracleBOMB {
    return super.attach(address) as OracleBOMB;
  }
  connect(signer: Signer): OracleBOMB__factory {
    return super.connect(signer) as OracleBOMB__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleBOMBInterface {
    return new utils.Interface(_abi) as OracleBOMBInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleBOMB {
    return new Contract(address, _abi, signerOrProvider) as OracleBOMB;
  }
}
