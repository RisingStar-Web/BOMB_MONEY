/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ShareFarmRewardPool,
  ShareFarmRewardPoolInterface,
} from "../ShareFarmRewardPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_share",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_poolStartTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL_REWARDS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_lastRewardTime",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTime",
        type: "uint256",
      },
    ],
    name: "getGeneratedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "governanceRecoverUnsupported",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accSharePerShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isStarted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runningTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "share",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharePerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060045566041ca7d11876006007556303c267006008553480156200002957600080fd5b50604051620017d3380380620017d38339810160408190526200004c91620000ec565b8042106200008f5760405162461bcd60e51b815260040162000086906020808252600490820152636c61746560e01b604082015260600190565b60405180910390fd5b6001600160a01b03821615620000bb57600180546001600160a01b0319166001600160a01b0384161790555b6005819055600854620000cf908262000128565b6006555050600080546001600160a01b031916331790556200014f565b600080604083850312156200010057600080fd5b82516001600160a01b03811681146200011857600080fd5b6020939093015192949293505050565b600082198211156200014a57634e487b7160e01b600052601160045260246000fd5b500190565b611674806200015f6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635752933a116100b8578063943f013d1161007c578063943f013d146102b957806396805e54146102c2578063a8d5fd65146102d5578063b3ab15fb146102e8578063cf4b55cb146102fb578063e2bbb1581461030e57600080fd5b80635752933a1461024f5780635f96dc1114610258578063630b5ba1146102615780636e271dd51461026957806393f1a40b1461027257600080fd5b8063441a3e70116100ff578063441a3e70146101d857806351eb05a6146101eb5780635312ea8e146101fe57806354575af414610211578063570ca7351461022457600080fd5b806309cf60911461013c5780631526fe271461016057806317caf6f1146101a75780631ab06ee5146101b0578063231f0c6a146101c5575b600080fd5b61014d690f7556828d6c7ba0000081565b6040519081526020015b60405180910390f35b61017361016e366004611354565b610321565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a001610157565b61014d60045481565b6101c36101be36600461136d565b61036f565b005b61014d6101d336600461136d565b61040d565b6101c36101e636600461136d565b6104d2565b6101c36101f9366004611354565b610694565b6101c361020c366004611354565b6107ec565b6101c361021f3660046113a7565b61088e565b600054610237906001600160a01b031681565b6040516001600160a01b039091168152602001610157565b61014d60075481565b61014d60055481565b6101c36109c2565b61014d60065481565b6102a46102803660046113e9565b60036020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610157565b61014d60085481565b6101c36102d0366004611427565b6109ed565b600154610237906001600160a01b031681565b6101c36102f636600461146f565b610bce565b61014d6103093660046113e9565b610c1a565b6101c361031c36600461136d565b610d76565b6002818154811061033157600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909160ff1685565b6000546001600160a01b031633146103a25760405162461bcd60e51b81526004016103999061148c565b60405180910390fd5b6103aa6109c2565b6000600283815481106103bf576103bf6114d8565b60009182526020909120600590910201600481015490915060ff161561040657610402826103fc8360010154600454610ef090919063ffffffff16565b90610f03565b6004555b6001015550565b600081831061041e575060006104cc565b6006548210610486576006548310610438575060006104cc565b600554831161046b5761046460075461045e600554600654610ef090919063ffffffff16565b90610f0f565b90506104cc565b61046460075461045e85600654610ef090919063ffffffff16565b6005548211610497575060006104cc565b60055483116104bb5761046460075461045e60055485610ef090919063ffffffff16565b6007546104649061045e8486610ef0565b92915050565b60003390506000600284815481106104ec576104ec6114d8565b600091825260208083208784526003825260408085206001600160a01b038816865290925292208054600590920290920192508411156105635760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b6044820152606401610399565b61056c85610694565b60006105a982600101546105a3670de0b6b3a764000061059d87600301548760000154610f0f90919063ffffffff16565b90610f1b565b90610ef0565b905080156105ff576105bb8482610f27565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040516105f691815260200190565b60405180910390a25b84156106295781546106119086610ef0565b82558254610629906001600160a01b03168587610fce565b6003830154825461064791670de0b6b3a76400009161059d91610f0f565b600183015560405185815286906001600160a01b038616907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a3505050505050565b6000600282815481106106a9576106a96114d8565b90600052602060002090600502019050806002015442116106c8575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073491906114ee565b90508060000361074957504260029091015550565b600482015460ff1661077a576004808301805460ff19166001908117909155830154905461077691610f03565b6004555b600454156107e157600061079283600201544261040d565b905060006107b360045461059d866001015485610f0f90919063ffffffff16565b90506107d96107ce8461059d84670de0b6b3a7640000610f0f565b600386015490610f03565b600385015550505b504260029091015550565b600060028281548110610801576108016114d8565b600091825260208083208584526003825260408085203380875293528420805485825560018201959095556005909302018054909450919291610851916001600160a01b03919091169083610fce565b604051818152849033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a350505050565b6000546001600160a01b031633146108b85760405162461bcd60e51b81526004016103999061148c565b6006546108c8906276a70061151d565b4210156109a9576001546001600160a01b03908116908416036109155760405162461bcd60e51b8152602060048201526005602482015264736861726560d81b6044820152606401610399565b60025460005b818110156109a657600060028281548110610938576109386114d8565b6000918252602090912060059091020180549091506001600160a01b03908116908716036109955760405162461bcd60e51b815260206004820152600a6024820152693837b7b6173a37b5b2b760b11b6044820152606401610399565b5061099f81611535565b905061091b565b50505b6109bd6001600160a01b0384168284610fce565b505050565b60025460005b818110156109e9576109d981610694565b6109e281611535565b90506109c8565b5050565b6000546001600160a01b03163314610a175760405162461bcd60e51b81526004016103999061148c565b610a2083611031565b8115610a2e57610a2e6109c2565b600554421015610a5d5780600003610a495750600554610a71565b600554811015610a5857506005545b610a71565b801580610a6957504281105b15610a715750425b600060055482111580610a845750428211155b6040805160a0810182526001600160a01b03878116825260208201898152928201868152600060608401818152861580156080870190815260028054600181018255945295517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600590940293840180546001600160a01b031916919096161790945594517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf82015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad082015592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad184015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2909201805460ff191692151592909217909155909150610bc757600454610bc39086610f03565b6004555b5050505050565b6000546001600160a01b03163314610bf85760405162461bcd60e51b81526004016103999061148c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060028481548110610c3057610c306114d8565b60009182526020808320878452600380835260408086206001600160a01b038a81168852945280862060059590950290920190810154815492516370a0823160e01b815230600482015291965093949291909116906370a0823190602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf91906114ee565b9050836002015442118015610ce357508015155b15610d40576000610cf885600201544261040d565b90506000610d1960045461059d886001015485610f0f90919063ffffffff16565b9050610d3b610d348461059d84670de0b6b3a7640000610f0f565b8590610f03565b935050505b610d6b83600101546105a3670de0b6b3a764000061059d868860000154610f0f90919063ffffffff16565b979650505050505050565b6000339050600060028481548110610d9057610d906114d8565b600091825260208083208784526003825260408085206001600160a01b0388168652909252922060059091029091019150610dca85610694565b805415610e5a576000610e0282600101546105a3670de0b6b3a764000061059d87600301548760000154610f0f90919063ffffffff16565b90508015610e5857610e148482610f27565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610e4f91815260200190565b60405180910390a25b505b8315610e86578154610e77906001600160a01b03168430876110d3565b8054610e839085610f03565b81555b60038201548154610ea491670de0b6b3a76400009161059d91610f0f565b600182015560405184815285906001600160a01b038516907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a35050505050565b6000610efc828461154e565b9392505050565b6000610efc828461151d565b6000610efc8284611565565b6000610efc8284611584565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9491906114ee565b905080156109bd5780821115610fbb576001546109bd906001600160a01b03168483610fce565b6001546109bd906001600160a01b031684845b6040516001600160a01b0383166024820152604481018290526109bd90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611111565b60025460005b818110156109bd57826001600160a01b03166002828154811061105c5761105c6114d8565b60009182526020909120600590910201546001600160a01b0316036110c35760405162461bcd60e51b815260206004820181905260248201527f535368617265526577617264506f6f6c3a206578697374696e6720706f6f6c3f6044820152606401610399565b6110cc81611535565b9050611037565b6040516001600160a01b038085166024830152831660448201526064810182905261110b9085906323b872dd60e01b90608401610ffa565b50505050565b6000611166826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111e39092919063ffffffff16565b8051909150156109bd578080602001905181019061118491906115a6565b6109bd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610399565b60606111f284846000856111fa565b949350505050565b60608247101561125b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610399565b6001600160a01b0385163b6112b25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610399565b600080866001600160a01b031685876040516112ce91906115ef565b60006040518083038185875af1925050503d806000811461130b576040519150601f19603f3d011682016040523d82523d6000602084013e611310565b606091505b5091509150610d6b8282866060831561132a575081610efc565b82511561133a5782518084602001fd5b8160405162461bcd60e51b8152600401610399919061160b565b60006020828403121561136657600080fd5b5035919050565b6000806040838503121561138057600080fd5b50508035926020909101359150565b6001600160a01b03811681146113a457600080fd5b50565b6000806000606084860312156113bc57600080fd5b83356113c78161138f565b92506020840135915060408401356113de8161138f565b809150509250925092565b600080604083850312156113fc57600080fd5b82359150602083013561140e8161138f565b809150509250929050565b80151581146113a457600080fd5b6000806000806080858703121561143d57600080fd5b84359350602085013561144f8161138f565b9250604085013561145f81611419565b9396929550929360600135925050565b60006020828403121561148157600080fd5b8135610efc8161138f565b6020808252602c908201527f535368617265526577617264506f6f6c3a2063616c6c6572206973206e6f742060408201526b3a34329037b832b930ba37b960a11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561150057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561153057611530611507565b500190565b60006001820161154757611547611507565b5060010190565b60008282101561156057611560611507565b500390565b600081600019048311821515161561157f5761157f611507565b500290565b6000826115a157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156115b857600080fd5b8151610efc81611419565b60005b838110156115de5781810151838201526020016115c6565b8381111561110b5750506000910152565b600082516116018184602087016115c3565b9190910192915050565b602081526000825180602084015261162a8160408501602087016115c3565b601f01601f1916919091016040019291505056fea264697066735822122076dec3a0b9a26538a4cd4955f1aaa06c65ea6a37837ad83b442b2677cc41fe7164736f6c634300080d0033";

type ShareFarmRewardPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareFarmRewardPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareFarmRewardPool__factory extends ContractFactory {
  constructor(...args: ShareFarmRewardPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _share: string,
    _poolStartTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShareFarmRewardPool> {
    return super.deploy(
      _share,
      _poolStartTime,
      overrides || {}
    ) as Promise<ShareFarmRewardPool>;
  }
  getDeployTransaction(
    _share: string,
    _poolStartTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_share, _poolStartTime, overrides || {});
  }
  attach(address: string): ShareFarmRewardPool {
    return super.attach(address) as ShareFarmRewardPool;
  }
  connect(signer: Signer): ShareFarmRewardPool__factory {
    return super.connect(signer) as ShareFarmRewardPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareFarmRewardPoolInterface {
    return new utils.Interface(_abi) as ShareFarmRewardPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShareFarmRewardPool {
    return new Contract(address, _abi, signerOrProvider) as ShareFarmRewardPool;
  }
}
