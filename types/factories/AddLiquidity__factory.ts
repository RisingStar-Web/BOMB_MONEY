/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AddLiquidity, AddLiquidityInterface } from "../AddLiquidity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "OperatorTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "governanceRecoverUnsupported",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator_",
        type: "address",
      },
    ],
    name: "transferOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600280546001600160a01b0319167310ed43c718714eb63d5aa57b78b54704e256024e17905534801561003657600080fd5b5061004033610085565b600180546001600160a01b031916339081179091556040516000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a36100d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110b0806100e46000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b1461014f578063a0e47bf61461016d578063e8e337001461018d578063f2fde38b146101c8578063f305d719146101e857600080fd5b806329605e77146100965780634456eda2146100b857806354575af4146100e8578063570ca73514610108578063715018a61461013a575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610e34565b6101fb565b005b3480156100c457600080fd5b506001546001600160a01b0316331460405190151581526020015b60405180910390f35b3480156100f457600080fd5b506100b6610103366004610e51565b61020f565b34801561011457600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016100df565b34801561014657600080fd5b506100b6610293565b34801561015b57600080fd5b506000546001600160a01b0316610122565b34801561017957600080fd5b50600254610122906001600160a01b031681565b34801561019957600080fd5b506101ad6101a8366004610e93565b6102a7565b604080519384526020840192909252908201526060016100df565b3480156101d457600080fd5b506100b66101e3366004610e34565b6102cf565b6101ad6101f6366004610f0f565b610345565b610203610369565b61020c816103c3565b50565b6001546001600160a01b0316331461027a5760405162461bcd60e51b8152602060048201526024808201527f6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657260448201526330ba37b960e11b60648201526084015b60405180910390fd5b61028e6001600160a01b0384168284610487565b505050565b61029b610369565b6102a560006104d9565b565b60008060006102bb8b8b8b8b8b8b8b610529565b925092509250985098509895505050505050565b6102d7610369565b6001600160a01b03811661033c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610271565b61020c816104d9565b60008060006103578989898989610897565b92509250925096509650969350505050565b6000546001600160a01b031633146102a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610271565b6001600160a01b03811661042f5760405162461bcd60e51b815260206004820152602d60248201527f6f70657261746f723a207a65726f206164647265737320676976656e20666f7260448201526c103732bb9037b832b930ba37b960991b6064820152608401610271565b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261028e908490610aca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008080871580159061053b57508615155b61057c5760405162461bcd60e51b81526020600482015260126024820152710616d6f756e74732063616e277420626520360741b6044820152606401610271565b6040516323b872dd60e01b8152336004820152306024820152604481018990526001600160a01b038b16906323b872dd906064016020604051808303816000875af11580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f39190610f6d565b506040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b038a16906323b872dd906064016020604051808303816000875af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190610f6d565b50600254610683908b906001600160a01b0316610b9c565b60025461069a908a906001600160a01b0316610b9c565b60025460405162e8e33760e81b81526001600160a01b038c811660048301528b81166024830152604482018b9052606482018a90526084820189905260a4820188905286811660c48301524260e4830152600092839283929091169063e8e3370090610104016060604051808303816000875af115801561071f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107439190610f8f565b9194509250905060006107568c85610c8b565b11156107e7576001600160a01b038d1663a9059cbb886107768e87610c8b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190610f6d565b505b60006107f38b84610c8b565b1115610884576001600160a01b038c1663a9059cbb886108138d86610c8b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190610f6d565b505b919c909b50909950975050505050505050565b6000808086158015906108a957503415155b6108ea5760405162461bcd60e51b81526020600482015260126024820152710616d6f756e74732063616e277420626520360741b6044820152606401610271565b6040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b038916906323b872dd906064016020604051808303816000875af115801561093d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109619190610f6d565b506002546109799089906001600160a01b0316610b9c565b60025460405163f305d71960e01b81526001600160a01b038a81166004830152602482018a9052604482018990526064820188905286811660848301524260a4830152600092839283929091169063f305d71990349060c40160606040518083038185885af11580156109f0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a159190610f8f565b919450925090506000610a288b85610c8b565b1115610ab9576001600160a01b038b1663a9059cbb88610a488d87610c8b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190610f6d565b505b919a90995090975095505050505050565b6000610b1f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c9e9092919063ffffffff16565b80519091501561028e5780806020019051810190610b3d9190610f6d565b61028e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610271565b604051636eb1769f60e11b81523060048201526001600160a01b03828116602483015283169063dd62ed3e90604401602060405180830381865afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c9190610fbd565b600003610c875760405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e9190610f6d565b5050565b6000610c978284610fd6565b9392505050565b6060610cad8484600085610cb5565b949350505050565b606082471015610d165760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610271565b6001600160a01b0385163b610d6d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610271565b600080866001600160a01b03168587604051610d89919061102b565b60006040518083038185875af1925050503d8060008114610dc6576040519150601f19603f3d011682016040523d82523d6000602084013e610dcb565b606091505b5091509150610ddb828286610de6565b979650505050505050565b60608315610df5575081610c97565b825115610e055782518084602001fd5b8160405162461bcd60e51b81526004016102719190611047565b6001600160a01b038116811461020c57600080fd5b600060208284031215610e4657600080fd5b8135610c9781610e1f565b600080600060608486031215610e6657600080fd5b8335610e7181610e1f565b9250602084013591506040840135610e8881610e1f565b809150509250925092565b600080600080600080600080610100898b031215610eb057600080fd5b8835610ebb81610e1f565b97506020890135610ecb81610e1f565b965060408901359550606089013594506080890135935060a0890135925060c0890135610ef781610e1f565b8092505060e089013590509295985092959890939650565b60008060008060008060c08789031215610f2857600080fd5b8635610f3381610e1f565b95506020870135945060408701359350606087013592506080870135610f5881610e1f565b8092505060a087013590509295509295509295565b600060208284031215610f7f57600080fd5b81518015158114610c9757600080fd5b600080600060608486031215610fa457600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215610fcf57600080fd5b5051919050565b600082821015610ff657634e487b7160e01b600052601160045260246000fd5b500390565b60005b83811015611016578181015183820152602001610ffe565b83811115611025576000848401525b50505050565b6000825161103d818460208701610ffb565b9190910192915050565b6020815260008251806020840152611066816040850160208701610ffb565b601f01601f1916919091016040019291505056fea2646970667358221220b1c37b87de19f86290e9882803ef48a8c588db8262eea9d30dd0c846da32609264736f6c634300080d0033";

type AddLiquidityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddLiquidityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddLiquidity__factory extends ContractFactory {
  constructor(...args: AddLiquidityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AddLiquidity> {
    return super.deploy(overrides || {}) as Promise<AddLiquidity>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddLiquidity {
    return super.attach(address) as AddLiquidity;
  }
  connect(signer: Signer): AddLiquidity__factory {
    return super.connect(signer) as AddLiquidity__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddLiquidityInterface {
    return new utils.Interface(_abi) as AddLiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddLiquidity {
    return new Contract(address, _abi, signerOrProvider) as AddLiquidity;
  }
}
