/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Epoch, EpochInterface } from "../Epoch";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startEpoch",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "OperatorTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastEpochTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "setEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "setPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator_",
        type: "address",
      },
    ],
    name: "transferOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161072c38038061072c83398101604081905261002f9161010b565b610038336100a8565b600180546001600160a01b031916339081179091556040516000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a360028390556003829055600581905561009c82846100f8602090811b61033117901c565b6004555061015e915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006101048284610139565b9392505050565b60008060006060848603121561012057600080fd5b8351925060208401519150604084015190509250925092565b60008282101561015957634e487b7160e01b600052601160045260246000fd5b500390565b6105bf8061016d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063ba52245811610066578063ba5224581461018a578063c5967c2614610192578063c828371e1461019a578063f2fde38b146101a257600080fd5b8063715018a6146101695780638da5cb5b14610171578063b97dd9e21461018257600080fd5b80630ceb2cef146100d45780630f3a9f65146100e95780631ed24195146100fc57806329605e77146101135780634456eda214610126578063570ca73514610144575b600080fd5b6100e76100e23660046104be565b6101b5565b005b6100e76100f73660046104be565b6101ed565b6002545b6040519081526020015b60405180910390f35b6100e76101213660046104d7565b610275565b6001546001600160a01b03163314604051901515815260200161010a565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161010a565b6100e7610289565b6000546001600160a01b0316610151565b600554610100565b600454610100565b61010061029d565b600354610100565b6100e76101b03660046104d7565b6102bb565b6001546001600160a01b031633146101e85760405162461bcd60e51b81526004016101df90610500565b60405180910390fd5b600555565b6001546001600160a01b031633146102175760405162461bcd60e51b81526004016101df90610500565b610e10811015801561022c57506202a3008111155b6102705760405162461bcd60e51b81526020600482015260156024820152745f706572696f643a206f7574206f662072616e676560581b60448201526064016101df565b600255565b61027d610344565b6102868161039e565b50565b610291610344565b61029b6000610462565b565b60006102b66002546004546104b290919063ffffffff16565b905090565b6102c3610344565b6001600160a01b0381166103285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101df565b61028681610462565b600061033d828461055a565b9392505050565b6000546001600160a01b0316331461029b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101df565b6001600160a01b03811661040a5760405162461bcd60e51b815260206004820152602d60248201527f6f70657261746f723a207a65726f206164647265737320676976656e20666f7260448201526c103732bb9037b832b930ba37b960991b60648201526084016101df565b6040516001600160a01b038216906000907f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed908290a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061033d8284610571565b6000602082840312156104d057600080fd5b5035919050565b6000602082840312156104e957600080fd5b81356001600160a01b038116811461033d57600080fd5b60208082526024908201527f6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657260408201526330ba37b960e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561056c5761056c610544565b500390565b6000821982111561058457610584610544565b50019056fea264697066735822122009c2281768619cba5a68677fe227289e234ec36fb9e918b79325c563c726d7f264736f6c634300080d0033";

type EpochConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EpochConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Epoch__factory extends ContractFactory {
  constructor(...args: EpochConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _period: BigNumberish,
    _startTime: BigNumberish,
    _startEpoch: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Epoch> {
    return super.deploy(
      _period,
      _startTime,
      _startEpoch,
      overrides || {}
    ) as Promise<Epoch>;
  }
  getDeployTransaction(
    _period: BigNumberish,
    _startTime: BigNumberish,
    _startEpoch: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _period,
      _startTime,
      _startEpoch,
      overrides || {}
    );
  }
  attach(address: string): Epoch {
    return super.attach(address) as Epoch;
  }
  connect(signer: Signer): Epoch__factory {
    return super.connect(signer) as Epoch__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EpochInterface {
    return new utils.Interface(_abi) as EpochInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Epoch {
    return new Contract(address, _abi, signerOrProvider) as Epoch;
  }
}
